# Generated by Django 5.2.5 on 2025-09-08 01:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0034_change_filter_agent_to_foreignkey'),
    ]

    operations = [
        migrations.AlterField(
            model_name='openaiagent',
            name='max_tokens',
            field=models.IntegerField(default=0, help_text='0 means detect automatically'),
        ),
        migrations.CreateModel(
            name='Digest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the digest (e.g., 'Tech Daily', 'Weekly Summary')", max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of the name, auto-generated', null=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, help_text='Optional description of what this digest covers', verbose_name='Description')),
                ('status', models.BooleanField(editable=False, help_text='Whether the last generation was successful', null=True, verbose_name='Generation Status')),
                ('days_range', models.IntegerField(default=1, help_text='Number of days to look back for articles (1 = today only, 7 = past week)', verbose_name='Days Range')),
                ('target_language', models.CharField(choices=[('English', 'English'), ('Chinese Simplified', 'Chinese Simplified'), ('Chinese Traditional', 'Chinese Traditional'), ('Russian', 'Russian'), ('Japanese', 'Japanese'), ('Korean', 'Korean'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('German', 'German'), ('Spanish', 'Spanish'), ('French', 'French'), ('Indonesian', 'Indonesian'), ('Italian', 'Italian'), ('Hungarian', 'Hungarian'), ('Norwegian Bokmal', 'Norwegian Bokmal'), ('Dutch', 'Dutch'), ('Polish', 'Polish'), ('Portuguese', 'Portuguese'), ('Swedish', 'Swedish'), ('Turkish', 'Turkish')], default='Chinese Simplified', help_text='Language of the generated digest output', max_length=50, verbose_name='Target Language')),
                ('prompt', models.TextField(default='\nYou are an editor-in-chief and expert analyst. Create a concise, objective, and well-structured daily digest from multiple articles.\n\nOUTPUT FORMAT\n3–5 categories (auto-generated, short topic names):\n- Header: ## {category}\n- Keep only the most important articles in this category\n- For each kept article:\n  - **[Title](LINK_X)**\n  > 1–2 sentences, present tense, active voice; highlight novel results/decisions/metrics/impacts; avoid repeated phrasing.\n\nSelection policy (apply strictly):\n- Prioritize significance and real-world impact (e.g., regulatory decisions, major launches, security incidents, funding/M&A, peer-reviewed findings)\n- Prioritize novelty; ignore incremental or routine updates and marketing/promotional posts\n- Prefer credible, primary sources; avoid rumors/speculation\n- Deduplicate across sources; if multiple items cover the same event, keep the most comprehensive one and drop the rest\n- If a category has no important items, skip the category entirely\n\nGeneral rules:\n- Maintain a neutral, objective tone; no content beyond the provided texts\n- Extract facts, named entities, numbers, dates, and concrete outcomes\n- Vary wording across items to avoid repetition\n- Title rewrite (each item): rewrite into {target_language} objectively (no hype/clickbait/exclamations). Do NOT copy source wording; always paraphrase into a concise, neutral title even if the source is already in {target_language}.\n', help_text='AI prompt for generating digest content. Use {digest_name}, {date}, {description}, {target_language} as placeholders', verbose_name='Prompt')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this digest should be automatically generated', verbose_name='Active')),
                ('last_generated', models.DateTimeField(blank=True, help_text='When this digest was last generated', null=True, verbose_name='Last Generated')),
                ('publish_days', models.JSONField(default=list, help_text="Days of week to publish (e.g., ['monday', 'tuesday', 'friday'])", verbose_name='Publish Days')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('log', models.TextField(blank=True, default='', help_text='Log for the digest, useful for debugging', null=True, verbose_name='Log')),
                ('total_tokens', models.IntegerField(default=0, verbose_name='Tokens Cost')),
                ('summarizer', models.ForeignKey(help_text='OpenAI agent to use for generating digest content (only valid agents are shown)', limit_choices_to={'valid': True}, on_delete=django.db.models.deletion.CASCADE, to='core.openaiagent', verbose_name='AI Summarizer')),
                ('tags', models.ManyToManyField(help_text='Tags to include in this digest. Articles from feeds with these tags will be processed', related_name='digests', to='core.tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Digest',
                'verbose_name_plural': 'Digests',
                'ordering': ['-updated_at'],
            },
        ),
    ]
