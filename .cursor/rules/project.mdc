---
alwaysApply: true
---
# Cursor Rules for RSS-Translator Project

## 项目概述
这是一个基于Django的RSS翻译服务项目，使用uv作为包管理器和测试工具。

## 通用编码规则

### 1. 语言要求
- 代码使用English编写
- 注释和文档使用中文简体
- 用户界面支持中英文双语

### 2. 代码质量
- 遵循PEP 8代码风格
- 使用类型提示（Type Hints）
- 编写清晰的文档字符串
- 保持代码简洁可维护

### 3. Django最佳实践
- 遵循Django的设计哲学
- 使用Django的内置功能和工具
- 正确使用模型、视图、URL配置
- 遵循Django的安全最佳实践

### 4. 测试要求
- 不能降低代码覆盖率
- 使用 `uv run coverage run manage.py test` 进行测试
- 每次添加测试用例后必须运行测试确保通过
- 除非用户明确允许，否则不得修改功能代码，只能修改测试代码

### 5. 依赖管理
- 使用uv管理Python包
- 在pyproject.toml中声明依赖
- 定期更新依赖版本

### 6. 数据库操作
- 使用Django ORM进行数据库操作
- 编写数据库迁移脚本
- 注意数据库性能优化

### 7. 安全考虑
- 使用环境变量管理敏感信息
- 实施适当的访问控制
- 验证用户输入
- 使用HTTPS在生产环境中

### 8. 性能优化
- 使用缓存减少数据库查询
- 优化数据库查询
- 使用异步处理长时间运行的任务

### 9. 错误处理
- 实现适当的错误处理机制
- 记录错误日志
- 提供用户友好的错误消息

### 10. 国际化
- 支持多语言界面
- 使用Django的国际化框架
- 提供语言切换功能

## 项目特定规则

### RSS处理
- 正确处理各种RSS/Atom格式
- 实现RSS源验证和错误处理
- 支持RSS源的自动更新

### 翻译服务
- 集成多种翻译API
- 实现翻译质量评估
- 支持批量翻译处理

### 缓存策略
- 使用Redis进行缓存
- 实现智能缓存失效策略
- 优化缓存命中率